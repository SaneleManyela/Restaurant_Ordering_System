/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orderingsystem;

import java.text.*;
import java.util.Date;
import javax.swing.*;
import java.io.*;

/**
 *
 * @author Sanele
 */
public class frmOrderWindow extends javax.swing.JFrame {

    /**
     * Creates new form frmOrderWindow
     */
    public frmOrderWindow() {
        initComponents();
        this.setLocationRelativeTo(null); //Displays the form at the centre of the screen
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); //Destroy only an object of this form when the form is closed
        txtDate.setText(new SimpleDateFormat("yyyy/MM/dd").format(new Date())); //Sets the current date as txtDate text value
        if(DateFormat.getTimeInstance().format(new Date()).indexOf(":") == 1){ //Checks index of a colon
            txtTime.setText(DateFormat.getTimeInstance().format(new Date()).substring(0, 4).trim()); //set current time as of when the form is displayed 
        } else if(DateFormat.getTimeInstance().format(new Date()).indexOf(":") == 2){
            txtTime.setText(DateFormat.getTimeInstance().format(new Date()).substring(0, 5).trim());
        }
        for(int i = 1; i <= 8; i++) { //Populate the number of guests combo box to value 8
            cboNumberOfGuests.addItem(String.valueOf(i));
        }
        txtFirstname.requestFocusInWindow(); //Puts the cursor inside txtFirstname
    }
    
    File flOrderFile; //A file variable to store order details
    String strOrderDetails; //A string variable to hold order data
    
    //A method to get order details from the GUI by evaluating
    //the selected value of each combo box is not equals("----Please Select------")
    //and concatenating text field text values
    private void mGetOrderDetails() { 
        if(!cboSnack.getSelectedItem().toString().equals("----Please Select------")){
            strOrderDetails = cboSnack.getSelectedItem().toString() +".";
        }
        if(!cboMain.getSelectedItem().toString().equals("----Please Select------")) {
            strOrderDetails += cboMain.getSelectedItem().toString() +".";
        }
        if(!cboCoolDrinks.getSelectedItem().toString().equals("----Please Select------")) {
            strOrderDetails += cboCoolDrinks.getSelectedItem().toString() +".";
        }
        if(!cboStrongDrinks.getSelectedItem().toString().equals("----Please Select------")) {
            strOrderDetails += cboStrongDrinks.getSelectedItem().toString()+".";
        }
        strOrderDetails += cboNumberOfGuests.getSelectedItem().toString()+"."
                +txtFirstname.getText() +"."+txtDate.getText()+"."
                +txtTime.getText()+" "+cboHour.getSelectedItem().toString()+".";
    }
    
    //A method that create a new file object
    private void mCreateNewOrderFile() {
        String strFile = "Order_by_"+txtFirstname.getText()+
                "_for_"+cboNumberOfGuests.getSelectedItem().toString()+"_guests"+".txt";
        flOrderFile = new File(strFile);
        if(flOrderFile.exists()) {
            flOrderFile.delete();
        }
        try {
            flOrderFile.createNewFile();
        } catch(IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    //A method to write order details to a text file
    private void mWriteOrderToFile() {
        mCreateNewOrderFile();
        try{
            FileWriter fwOrderWriter = new FileWriter(flOrderFile, true);
            fwOrderWriter.write(strOrderDetails);
            fwOrderWriter.close();
            JOptionPane.showMessageDialog(null, "Your order has been placed.");
            Runtime.getRuntime().exec("cmd.exe /c start notepad.exe \""+flOrderFile.getAbsolutePath()+"\"");
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dsktpOrderWindow = new javax.swing.JDesktopPane();
        jpDishes = new javax.swing.JPanel();
        lblDishes = new javax.swing.JLabel();
        lblSack = new javax.swing.JLabel();
        lblMain = new javax.swing.JLabel();
        cboSnack = new javax.swing.JComboBox<>();
        cboMain = new javax.swing.JComboBox<>();
        jpDrinks = new javax.swing.JPanel();
        lblDrinks = new javax.swing.JLabel();
        lblCoolDrinks = new javax.swing.JLabel();
        lblStrongDrinks = new javax.swing.JLabel();
        cboCoolDrinks = new javax.swing.JComboBox<>();
        cboStrongDrinks = new javax.swing.JComboBox<>();
        jpMainPanel = new javax.swing.JPanel();
        btnOrder = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblFirstname = new javax.swing.JLabel();
        txtFirstname = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblTime = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        lblNumberOfGuests = new javax.swing.JLabel();
        cboNumberOfGuests = new javax.swing.JComboBox<>();
        cboHour = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jpDishes.setBackground(new java.awt.Color(125, 176, 255));

        lblDishes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDishes.setText("Dishes");

        lblSack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSack.setText("Snack");

        lblMain.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMain.setText("Main");

        cboSnack.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Please Select------", "Double Cheese Burger", "Zambezi Chikka Twista", "Calamari Wrap" }));

        cboMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Please Select------", "Sui-Feleigh", "Portugese Chicken", "Samp and Beans with Curry" }));

        javax.swing.GroupLayout jpDishesLayout = new javax.swing.GroupLayout(jpDishes);
        jpDishes.setLayout(jpDishesLayout);
        jpDishesLayout.setHorizontalGroup(
            jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDishesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDishes)
                    .addGroup(jpDishesLayout.createSequentialGroup()
                        .addGroup(jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSack)
                            .addComponent(lblMain))
                        .addGap(48, 48, 48)
                        .addGroup(jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboSnack, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboMain, 0, 1, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDishesLayout.setVerticalGroup(
            jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDishesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDishes)
                .addGap(18, 18, 18)
                .addGroup(jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSack)
                    .addComponent(cboSnack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDishesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMain)
                    .addComponent(cboMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jpDrinks.setBackground(new java.awt.Color(125, 176, 255));

        lblDrinks.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDrinks.setText("Drinks");

        lblCoolDrinks.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCoolDrinks.setText("Cool Drinks");

        lblStrongDrinks.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblStrongDrinks.setText("Strong Drinks");

        cboCoolDrinks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Please Select------", "Stoney", "Sprite", "Coca Cola", "Fanta" }));

        cboStrongDrinks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Please Select------", "Blue Oceans Cocktail", "Dirty String martini", "Cola with Black Label" }));

        javax.swing.GroupLayout jpDrinksLayout = new javax.swing.GroupLayout(jpDrinks);
        jpDrinks.setLayout(jpDrinksLayout);
        jpDrinksLayout.setHorizontalGroup(
            jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDrinksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDrinksLayout.createSequentialGroup()
                        .addComponent(lblDrinks)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpDrinksLayout.createSequentialGroup()
                        .addGroup(jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCoolDrinks)
                            .addComponent(lblStrongDrinks))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addGroup(jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboCoolDrinks, 0, 135, Short.MAX_VALUE)
                            .addComponent(cboStrongDrinks, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
        );
        jpDrinksLayout.setVerticalGroup(
            jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDrinksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDrinks)
                .addGap(18, 18, 18)
                .addGroup(jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCoolDrinks)
                    .addComponent(cboCoolDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDrinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStrongDrinks)
                    .addComponent(cboStrongDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpMainPanel.setBackground(new java.awt.Color(125, 176, 255));

        btnOrder.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnOrder.setText("Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblFirstname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFirstname.setText("Firstname");

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDate.setText("Date");

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTime.setText("Time");

        lblNumberOfGuests.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNumberOfGuests.setText("Number Of Guests");

        cboHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        javax.swing.GroupLayout jpMainPanelLayout = new javax.swing.GroupLayout(jpMainPanel);
        jpMainPanel.setLayout(jpMainPanelLayout);
        jpMainPanelLayout.setHorizontalGroup(
            jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMainPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFirstname)
                    .addComponent(lblDate)
                    .addComponent(lblTime))
                .addGap(48, 48, 48)
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpMainPanelLayout.createSequentialGroup()
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboHour, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(87, 87, 87)
                .addComponent(lblNumberOfGuests)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboNumberOfGuests, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOrder, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(25, 25, 25))
        );
        jpMainPanelLayout.setVerticalGroup(
            jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstname)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumberOfGuests)
                    .addComponent(cboNumberOfGuests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOrder))
                .addGap(18, 18, 18)
                .addGroup(jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTime)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose)
                    .addComponent(cboHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 32, Short.MAX_VALUE))
        );

        dsktpOrderWindow.setLayer(jpDishes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dsktpOrderWindow.setLayer(jpDrinks, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dsktpOrderWindow.setLayer(jpMainPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dsktpOrderWindowLayout = new javax.swing.GroupLayout(dsktpOrderWindow);
        dsktpOrderWindow.setLayout(dsktpOrderWindowLayout);
        dsktpOrderWindowLayout.setHorizontalGroup(
            dsktpOrderWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsktpOrderWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dsktpOrderWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dsktpOrderWindowLayout.createSequentialGroup()
                        .addComponent(jpDishes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dsktpOrderWindowLayout.setVerticalGroup(
            dsktpOrderWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsktpOrderWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dsktpOrderWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpDishes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDrinks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jpMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dsktpOrderWindow)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dsktpOrderWindow)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.hide();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        if((cboSnack.getSelectedItem().toString().equals("----Please Select------")
                && cboMain.getSelectedItem().toString().equals("----Please Select------")
                && cboCoolDrinks.getSelectedItem().toString().equals("----Please Select------")
                && cboStrongDrinks.getSelectedItem().toString().equals("----Please Select------"))){
            JOptionPane.showMessageDialog(null, "Select something to order.");
        } else if(txtFirstname.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Provide your first name.");
            txtFirstname.requestFocusInWindow();
        } else if(txtDate.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Provide the date of fulfiling the order");
            txtDate.requestFocusInWindow();
        } else if(txtTime.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Provide time of arrival for order");
            txtTime.requestFocusInWindow();
        } else if(!txtTime.getText().equals("")) {
            if(cboHour.getSelectedItem().toString().equals("AM") &&
                    txtTime.getText().indexOf(":") == 1 &&
                    Integer.parseInt(txtTime.getText().substring(0, 1)) < 8) {
                JOptionPane.showMessageDialog(null, "Please change your time of arrival for"
                        + "your order to be \nBetween 8:00 AM to 10:30 PM");
            } else if(cboHour.getSelectedItem().toString().equals("PM") &&
                    txtTime.getText().indexOf(":") == 2
                    && Integer.parseInt(txtTime.getText().substring(0, 1)) >= 10 &&
                    Integer.parseInt(txtTime.getText().substring(3, 4)) >= 30) {
                JOptionPane.showMessageDialog(null, "Please change your time of arrival for"
                        + "your order to be \nBetween 8:00 AM to 10:30 PM");
            } else if(new Date().getDay() == 0 && cboHour.getSelectedItem().toString().equals("PM") 
                    && txtTime.getText().indexOf(":") == 2 
                    && Integer.parseInt(txtTime.getText().substring(0, 1)) >= 9 && 
                    Integer.parseInt(txtTime.getText().substring(3, 4)) >= 30){
                JOptionPane.showMessageDialog(null, "On Sundays we close at 9:30 PM."
                        + " \nPlease place yor order for tomorrow");
            } else{
                mGetOrderDetails();
                mWriteOrderToFile();
            }
        }
    }//GEN-LAST:event_btnOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmOrderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmOrderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmOrderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmOrderWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmOrderWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnOrder;
    private javax.swing.JComboBox<String> cboCoolDrinks;
    private javax.swing.JComboBox<String> cboHour;
    private javax.swing.JComboBox<String> cboMain;
    private javax.swing.JComboBox<String> cboNumberOfGuests;
    private javax.swing.JComboBox<String> cboSnack;
    private javax.swing.JComboBox<String> cboStrongDrinks;
    private javax.swing.JDesktopPane dsktpOrderWindow;
    private javax.swing.JPanel jpDishes;
    private javax.swing.JPanel jpDrinks;
    private javax.swing.JPanel jpMainPanel;
    private javax.swing.JLabel lblCoolDrinks;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDishes;
    private javax.swing.JLabel lblDrinks;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblMain;
    private javax.swing.JLabel lblNumberOfGuests;
    private javax.swing.JLabel lblSack;
    private javax.swing.JLabel lblStrongDrinks;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
