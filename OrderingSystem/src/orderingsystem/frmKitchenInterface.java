/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orderingsystem;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author Sanele
 */
public class frmKitchenInterface extends javax.swing.JFrame {

    /**
     * Creates new form frmKitchenInterface
     */
    public frmKitchenInterface() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jpPanel.setOpaque(true);
        jpPanel.setBackground(new Color(125, 176, 255));
        frmWaiterInterface frmDisplay = new frmWaiterInterface(); //Creates an object of type frmWaiterInterface
        frmDisplay.mReadOrderFile(frmDisplay.mFilePath()); // Calls a method to read a text file with a given file path
        frmDisplay.mGetOrderData(); //Calls a method to get order data/
        mDisplayDishes(frmDisplay.arrOrderData); //Displays ordered food dishes
    }
    
    //A method that displays in a list box dishes that are ordered
    private void mDisplayDishes(String[] arrData) {
        
        String[] arrRowData = new String[arrData.length];
        for(int i = 0; i < arrRowData.length; i++) {
            arrRowData[i] = arrData[i];
        }
        
        DefaultListModel model = new DefaultListModel();
        lstDishes.setModel(model);
        arrRowData = mGetInterfaceData(arrRowData);
        
        for(int i = 0; i < arrRowData.length; i++) {
            model.addElement(arrRowData[i]);
        }
    }
    
    private String[] mGetInterfaceData(String[] arrRowData){
        String[] arrInterfaceData;
        ArrayList<String> list = new ArrayList<>();
        list.add("Burger"); list.add("Zambezi"); list.add("Calamari");
        list.add("Sui-Feleigh"); list.add("Portugese"); list.add("Samp"); 
        list.add("Stoney"); list.add("Sprite"); list.add("Coca");
        list.add("Fanta"); list.add("Blue"); list.add("martini");
        list.add("Black");
        
        int intElements = 0;
        for(int i = 0; i < arrRowData.length; i++) {
            for(int j = 0; j < list.size(); j++) {
                if(arrRowData[i].contains(list.get(j))){
                    intElements++;
                }
            }
        }
        
        arrInterfaceData = new String[intElements];
        ArrayList<String> listTemp = new ArrayList<>();
        
        for(int i = 0; i < arrRowData.length; i++){
            for(int k = 0; k < list.size(); k++) {
                if(arrRowData[i].contains(list.get(k))){
                    listTemp.add(arrRowData[i]);
                }
            }
        }
        
        for(int i = 0; i < arrInterfaceData.length; i++){
            arrInterfaceData[i] = listTemp.get(i);
        }
        return arrInterfaceData;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDishes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(lstDishes);

        javax.swing.GroupLayout jpPanelLayout = new javax.swing.GroupLayout(jpPanel);
        jpPanel.setLayout(jpPanelLayout);
        jpPanelLayout.setHorizontalGroup(
            jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jpPanelLayout.setVerticalGroup(
            jpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmKitchenInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpPanel;
    private javax.swing.JList<String> lstDishes;
    // End of variables declaration//GEN-END:variables
}
